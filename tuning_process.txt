I decided to create a new set of AMPA/NMDA mechanisms to approximate the behaviour of Jason's synapses (without plasticity). The problem is, of course, that NeuroML's 'building blocks' for synapses don't map directly to the equations that Jason used. I went for a (sort of) quick-and-dirty solution:

* AMPA: NeuroML has a 'multi_decay_syn' element that allows to define a single rise time and three different sets of decay times and amplitudes. This is quite close what Jason's AMPA model does except that, unfortunately, the functional forms of the equations are apparently different in the two cases (even if I think that it should be possible to equate them by an appropriate tranformation on the parameters). Furthermore, I don't know exactly how NeuroML's waveforms are normalized, since the amplitude parameters are three 'maximum amplitudes', instead of being a single 'max amplitude' and three relative amplitudes. Nevertheless, I just took the three 'relative factors' (each given by a relative amplitude times the waveform normalization times the max amplitude: in other words, the multiplicative factor to the exponential function as it appears in each term of the explicit form of the equation) in Jason's model and used them as 'max amplitudes' in NeuroML's multi_decay_syn element. This had two consequences:
 - I got a nice agreement on the shapes of the conductance waveforms, that just needed an adjustment on the rise time parameter to compensate for the different functional shape on the 'rising' part (the 'power of N') in Jason's model. A good match was achieved with a rise time of 0.15ms.
 - The normalisation was messed up, so I went back to nC and did a few voltage-clamp simulations to find out what synaptic weight factor was needed to get an EPSC that agreed, at least in a first approximation, with the results shown in Sargent2005. I opted for a synaptic weight of 0.2, that gives: peak h. current -42pA, total charge tranfer (roughly) 300fC, EPSC half-life (roughly) 4ms. Sargent2005 had shorter, more peaked EPSCs that overall carried less charge; but that paper doesn't take into account the slow NMDA component, which - I would say - gives rise to the difference in character that can be seen here.

* NMDA: 
 - the equations for the blocking factors have a different form, so I just found (by trial-and-error) a 'gamma' parameter that gave a similar dependency of the factor on the voltage. I found it to be 1/(29mV).
 - there's a fast (8.10ms, relative amplitude 0.11) and a slow (37.0ms, relative amplitude 0.06) component, but NeuroML's blocking synapse element allows only a single component (because of 'compatibility issues with genesis'). So I just took the weighted average of the decay time constants: 18.2ms. The rise time is 1.14ms and the maximum conductance is 367.9pS, as in Jason's model. Since here I have control over the normalization of the waveform (and I'm sure that I get to choose the maximum conductance), the synaptic weight in the nC project is 1.

Finally, I checked that the input/output frequency behaviour of this model is at least approximately consistent with what is shown in Rothman2009: in a similar experiment, I get the following results:

==========================
Poisson stimulation on MFs, AMPA(0.2 syn weight to balance slightly different waveform shape and different normalization)+NMDA(1.0 syn weight) synapse to GrCs. Average frequencies (in Hz) taken over a 1s simulation.

STIM	MF FIRE	    GC FIRE
100	8	    0
150	23	    11
200	40 	    24
250	54	    42
300	93	    106
350	119	    175
400	128	    200
450	169	    298
500	186	    342
==========================


++++++++++++++
++21/09/2011++
++++++++++++++
Trying to find the 'activation point': the frequency that one should use (in a Poisson spike train) to activate a granule cell when stimulating with a single mossy fiber. To improve upon yesterday's procedure, I took from the RothmanEtAl_KoleEtAl_PyrCell project a cell called ExcCell that, having a very strong FastSynInput input synapse, a large leak conductance and an high outbound spike threshold (and nothing else; of course, the last parameter is not part of the cell but must be set in the relevant netCons) is well suited to act as a simple 'relay' for any spike train we may want to play into it. This, finally, allows us to have a Poisson spike train of our choice activating both AMPA and NMDA synapses with the correct synaptic weights.
We can now repeat the I/O rate analysis (single trial, each simulation is 10s long):

MF FIRE	   GC FIRE
10 	   0.7
20	   3.8
30	   7.7
40	   16.6
50	   27.4
60	   40.4
70	   60.2
80	   72.6
90	   104.5
100	   115.7
110	   135.5
120	   156.5
130	   173.7
140	   208.4

I will take 30Hz to be the input threshold for activation.

INHIBITION TUNING
Now I will find out the amount of current that "gives rise to X inputs being required to be active before the cell is 'on'", where X=1,2,... is the number of dendrites. I'm testing on a single 1000ms trial for simplicity (this, since I'm using Poisson spike trains, means that these results are just a rough estimate for the correct 'average' values).

NUMBER OF ACTIVE  |  BIAS CURRENT  |	FIRING
INPUTS REQUIRED   |  	 (pA) 	   |	 RATE
TO FIRE           |		   |	 (Hz)
---------------------------------------------------
1			0		7.7
2			-17.5		7
3			-36		8
4			-50		8
5			-72		[3,10]
6			-82		9
7			-95		[4,11]
8			-115		8
9			-130		7
10			-147		[8,12]


++++++++++++++
++21/10/2011++
++++++++++++++
Refitted the synaptic models trying to match directly the conductance waveforms to those used by Jason's model (see the waveforms.py script). Used Jason's data on 'average' effect of plasticity to devise an expression that gives the coonductance correction factor at any given stimulation frequency (first order correction for a model without plasticity).
Now I want to check my results by plotting the input-output frequency relationship for my model with and without this correction. 4 MFs, 1 GrC, 10s simulation. Frequencies are in Hz (number of spikes in a single trial/10).


STIM  NOPLAST   PLAST
10    0.2	0.1
20    4.6	0.8
30    17.8	6.4
40    41.3	16.7
50    81	33.5
60    128.2	56.8
70    162.8	89.2
80    200.8	102.9
90    240.5	132.4
100   257.5	152.4
110   279.5	173.1
120   294.6	187.2
130   315.3	202.6
140   325.3	226.1


++++++++++++++
++25/10/2011++
++++++++++++++
Since these numbers are obtained with 4 MFs stimulating a single GrC, I'll fix the 'activity point' of the GrC model at '4 stimuli at 30Hz'. Active stimulus frequency will be then at 3oHz, just as before the retuning of the model (but note that now we need 4 active inputs to fire in absence of inhibition). I will now determine how many active inputs it takes to activate a cell for a range of inhibitory current values.


NUMBER OF ACTIVE  |  BIAS CURRENT  |	FIRING
INPUTS REQUIRED   |  	 (pA) 	   |	 RATE
TO FIRE           |		   |	 (Hz)
---------------------------------------------------
4			0		6.4
5			-10		5.3
6			-15		6
7			-20		8


fixed firing at 120Hz.

NUMBER OF ACTIVE  |  BIAS CURRENT  |	FIRING
INPUTS REQUIRED   |  	 (pA) 	   |	 RATE
TO FIRE           |		   |	 (Hz)
---------------------------------------------------
1			0		2.5
2			-10		5.5
3			-25		8
4			-45		6.5
5			-60		5.5
6			-75		6.5
7			-85		8.5
8			-100		3-15


